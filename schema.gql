# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Media {
  id: String!
  path: String!
  name: String!
  small: String
  medium: String
  mediumLarge: String
  large: String
  created_at: DateTime!
  updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Restaurant {
  id: String!
  name: String!
  description: String!
  minPrice: Float!
  deliveryTime: String!
  rating: String!
  media: Media
  created_at: DateTime!
  updated_at: DateTime!
}

type Product {
  id: String!
  name: String!
  description: String!
  price: Float!
  weight: String!
  restaurant: Restaurant
  media: Media
  categories: [Category!]!
  created_at: DateTime!
  updated_at: DateTime!
}

type Category {
  id: String!
  name: String!
  slug: String
  products: [Product!]!
  created_at: DateTime!
  updated_at: DateTime!
}

type RestaurantCategory {
  id: String!
  restaurant: Restaurant
  category: Category
  order: Float!
  created_at: DateTime!
  updated_at: DateTime!
}

type SuggestionDataEntity {
  geo_lat: String
  geo_lon: String
  postal_code: String
  country: String
  country_iso_code: String
  region_fias_id: String
  region_kladr_id: String
}

type SuggestionEntity {
  value: String!
  unrestricted_value: String!
  data: SuggestionDataEntity!
}

type User {
  id: String!
  name: String
  phone: String!
  email: String
  address: String
  address_lat: String
  address_lon: String
  created_at: DateTime!
  updated_at: DateTime!
}

type Query {
  findCategories: [Category!]!
  findOneCategory(id: String!): Category!
  findByKeyCategories(data: FindByKeyInput!): [Category!]!
  findMedia: [Media!]!
  findOneMedia(id: String!): Media!
  findRestaurants: [Restaurant!]!
  findOneRestaurant(id: String!): Restaurant!
  findByKeyRestaurants(data: FindByKeyInput!): [Restaurant!]!
  findProducts: [Product!]!
  findOneProduct(id: String!): Product!
  findByKeyProducts(data: FindByKeyInput!): [Product!]!
  findRestaurantCategory: [RestaurantCategory!]!
  findOnefindRestaurantCategory(id: String!): RestaurantCategory!
  findByKeyRestaurantCategory(data: FindByKeyInput!): [RestaurantCategory!]!
  findPossibleAddresses(address: String!): [SuggestionEntity!]!
  getUserByToken(token: String!): User!
}

input FindByKeyInput {
  field: String!
  value: String!
}

type Mutation {
  createCategory(data: AddCategoryInput!): Category!
  deleteCategory(id: String!): Boolean!
  updateCategory(data: UpdateCategoryInput!, id: String!): Boolean!
  createMedia(file: Upload!): Media!
  deleteMedia(id: String!): Media!
  createRestaurant(data: AddRestaurantInput!): Restaurant!
  deleteRestaurant(id: String!): Boolean!
  updateRestaurant(data: UpdateRestaurantInput!, id: String!): Boolean!
  createProduct(data: AddProductInput!): Product!
  deleteProduct(id: String!): Boolean!
  updateProduct(data: UpdateProductInput!, id: String!): Boolean!
  createRestaurantCategory(data: AddRestaurantCategoryInput!): RestaurantCategory!
  updateUser(data: UpdateUserInput!, id: String!): Boolean!
  createOTP(data: AddOtpInput!): Boolean!
  authenticationUser(data: CheckOtpInput!): String!
}

input AddCategoryInput {
  name: String!
}

input UpdateCategoryInput {
  name: String
  slug: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input AddRestaurantInput {
  name: String!
  description: String!
  minPrice: String!
  deliveryTime: String!
  rating: String!
  media: String!
}

input UpdateRestaurantInput {
  name: String
  description: String
  minPrice: String
  deliveryTime: String
  rating: String
  media: String
}

input AddProductInput {
  name: String!
  description: String!
  price: String!
  weight: String!
  restaurant: String!
  media: String!
  categories: [String!]!
}

input UpdateProductInput {
  name: String
  description: String
  price: String
  weight: String
  restaurant: String
  media: String
  categories: [String!]
}

input AddRestaurantCategoryInput {
  category: String!
  restaurant: String!
  order: String!
}

input UpdateUserInput {
  name: String
  phone: String
  email: String
  address: String
  address_lat: String
  address_lon: String
}

input AddOtpInput {
  phone: String!
  sessionID: String!
}

input CheckOtpInput {
  phone: String!
  OTP: String!
  sessionID: String!
}
